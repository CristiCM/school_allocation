
<% if !current_user.nil? && current_user.role == "student" %>
  <h2 class="mt-10 mb-2 text-2xl font-extrabold text-sap-black text-center">Your grades</h2>
  <div class="mt-10 relative overflow-x-auto shadow-md sm:rounded-lg">
      <table class="w-full text-sm text-left text-sap-white">
          <thead class="text-xs text-sap-white uppercase bg-sap-black">
              <tr>
                  <th scope="col" class="px-6 py-3 text-center">
                      Grade category
                  </th>
                  <th scope="col" class="px-6 py-3 text-center">
                      Grade
                  </th>
              </tr>
          </thead>
          <tbody>
              <tr class="bg-sap-grey border-b text-center">
                  <th scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                      Admission average
                  </th>
                  <td class="px-6 py-4">
                      <%= current_user.admission_average %>
                  </td>
              </tr>
              <tr class="bg-sap-grey border-b text-center">
                  <th scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                      English average
                  </th>
                  <td class="px-6 py-4">
                      <%= current_user.en_average %>
                  </td>
              </tr>
              <tr class="bg-sap-grey border-b text-center">
                  <th scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                      Romanian grade
                  </th>
                  <td class="px-6 py-4">
                      <%= current_user.ro_grade %>
                  </td>
              </tr>
              <tr class="bg-sap-grey border-b text-center">
                  <th scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                      Mathematics grade
                  </th>
                  <td class="px-6 py-4">
                      <%= current_user.mathematics_grade %>
                  </td>
              </tr>
              <tr class="bg-sap-grey border-b text-center">
                  <th scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                      Mother tongue
                  </th>
                  <td class="px-6 py-4">
                      <%= current_user.mother_tongue.nil? ? "-" : current_user.mother_tongue %>
                  </td>
              </tr>
              <tr class="bg-sap-grey border-b text-center">
                  <th scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                      Mother tongue grade
                  </th>
                  <td class="px-6 py-4">
                      <%= current_user.mother_tongue_grade.nil? ? "-" : current_user.mother_tongue_grade %>
                  </td>
              </tr>
              <tr class="bg-sap-grey border-b text-center">
                  <th scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                      Graduation average
                  </th>
                  <td class="px-6 py-4">
                      <%= current_user.graduation_average %>
                  </td>
              </tr>

          </tbody>
      </table>
  </div>

    <h2 class="mt-10 mb-2 text-2xl font-extrabold text-sap-black text-center">Your preferences</h2>
      <div class="mt-10 relative overflow-x-auto shadow-md sm:rounded-lg">
      <table class="w-full text-sm text-left text-sap-white">
          <thead class="text-xs text-gray-700 uppercase bg-sap-black">
              <tr>
                  <th scope="col" class="px-6 py-3">
                      Preference
                  </th>
                  <th scope="col" class="px-6 py-3 text-center">
                      Priority
                  </th>
              </tr>
          </thead>
          <tbody>
          <% current_user.preferences.each do |preference|%>
              <tr class="bg-white border-b bg-sap-grey">
                  <th scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                      <%= SchoolSpecialization.find(preference.school_specialization_id).display_name if preference.school_specialization_id.present? %>
                  </th>
                  <td class="px-6 py-4 text-center">
                      <%= preference.priority %>
                  </td>
              </tr>
          <% end %>
          </tbody>
      </table>
<% elsif !current_user.nil? && current_user.role == "admin" %>
    <div class="max-w-screen-xl mx-auto px-5 bg-sap-blue3 min-h-sceen mt-10">
        <div class="flex flex-col items-center">
            <h2 class="font-bold text-3xl mt-5 tracking-tight">
                HOW TO
            </h2>
            <p class="text-neutral-500 text-lg mt-3">
                Frequenty asked questions
            </p>
        </div>
        <div class="grid divide-y divide-neutral-200 max-w-xl mx-auto mt-8">
            <div class="py-5">
                <details class="group">
                    <summary class="flex justify-between items-center font-medium cursor-pointer list-none">
                        <span> Step 1: Importing the necessary data</span>
                        <span class="transition group-open:rotate-180">
                    <svg fill="none" height="24" shape-rendering="geometricPrecision" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" viewBox="0 0 24 24" width="24"><path d="M6 9l6 6 6-6"></path>
    </svg>
                </span>
                    </summary>
                    <p class="text-neutral-600 mt-3 group-open:animate-fadeIn">
                        Data must be loaded in.csv format under the "Import Data" tab.
                        The document must contain three columns with the following headings:
                        |school|track|specialization|
                    </p>
                </details>
            </div>
            <div class="py-5">
                <details class="group">
                    <summary class="flex justify-between items-center font-medium cursor-pointer list-none">
                        <span> Step 2: Createing school specializations</span>
                        <span class="transition group-open:rotate-180">
                    <svg fill="none" height="24" shape-rendering="geometricPrecision" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" viewBox="0 0 24 24" width="24"><path d="M6 9l6 6 6-6"></path>
    </svg>
                </span>
                    </summary>
                    <p class="text-neutral-600 mt-3 group-open:animate-fadeIn">
                        Under the "Specialization Creation" page, school specialties must be created.
                        School, Track, Specialization, and Capacity input are all available on the form. 
                        In case any errors managed to slip in, there is also a "Last entry" form that enables quick corrections.
                        Additionally, there is a button labeled "All records" that will show every record previously generated with the option to modify it.
                    </p>
                </details>
            </div>
            <div class="py-5">
                <details class="group">
                    <summary class="flex justify-between items-center font-medium cursor-pointer list-none">
                        <span> Step 3: Creating student accounts</span>
                        <span class="transition group-open:rotate-180">
                    <svg fill="none" height="24" shape-rendering="geometricPrecision" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" viewBox="0 0 24 24" width="24"><path d="M6 9l6 6 6-6"></path>
    </svg>
                </span>
                    </summary>
                    <p class="text-neutral-600 mt-3 group-open:animate-fadeIn">
                        A plug-and-play student account can be created under the "Student Creation" section. 
                        Administrators can enter the student's grades on the form, and after it's submitted, 
                        the student will receive an email asking him to reset his password. 
                        He is able to select his preferences from the ones that were generated in the previous phase.
                    </p>
                </details>
            </div>
            <div class="py-5">
                <details class="group">
                    <summary class="flex justify-between items-center font-medium cursor-pointer list-none">
                        <span> Step 4: Picking notification and allocation dates</span>
                        <span class="transition group-open:rotate-180">
                    <svg fill="none" height="24" shape-rendering="geometricPrecision" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" viewBox="0 0 24 24" width="24"><path d="M6 9l6 6 6-6"></path>
    </svg>
                </span>
                    </summary>
                    <p class="text-neutral-600 mt-3 group-open:animate-fadeIn">
                        There are two potential notification dates that can be selected in the "Scheduler" section. 
                        The pupils who didn't select any preferences will be reminded through email to do so at the appropriate time by using the notification date pickers.
                        The allocation date picker enables the selection of a day for the allocation procedure, 
                        on which each student will be assigned to one of the open slots they selected.
                    </p>
                </details>
            </div>
            <div class="py-5">
                <details class="group">
                    <summary class="flex justify-between items-center font-medium cursor-pointer list-none">
                        <span> Step 5: Overview</span>
                        <span class="transition group-open:rotate-180">
                    <svg fill="none" height="24" shape-rendering="geometricPrecision" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" viewBox="0 0 24 24" width="24"><path d="M6 9l6 6 6-6"></path>
    </svg>
                </span>
                    </summary>
                    <p class="text-neutral-600 mt-3 group-open:animate-fadeIn">
                        A post-allocation overall view of the pupils is possible in the "Allocation Overview" section.
                    </p>
                </details>
            </div>
        </div>
    </div>
<% end %> 
